/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hlr.billing.collation;

import java.awt.Window;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

/**
 *
 * @author vazhenin
 */
public class MainFrame extends javax.swing.JFrame {

    ArrayList<ArrayList<SubsData>> threads;

    ArrayList<Worker> hlrSockets;
    ArrayList<DButilities> dbSockets;

    DButilities db;
    ParseXMLUtilities getParams;

    String ip = "10.1.5.88";
    int port = 7778;
    static boolean isConnected = false;
    static int processedSubs = 0;
    private final ExecutorService executor = Executors.newCachedThreadPool();
    String numbersList = null;
    private String v_startTime;

    /**
     * Creates new form MainFrame
     */
    public MainFrame(String args[]) {
        getParams = new ParseXMLUtilities("parameters.xml");
        getParams.initiate();
        Logging.setLogFileName(getParams.getNodeValue(getParams.getChildNodes("log"), "logFilePath"));

        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        db = new DButilities();

        initComponents();
        jComboBox1.setSelectedIndex(jComboBox1.getSelectedObjects().length);
        setLocationRelativeTo(null);

    }

    void defineHLRConnForPool(int threads) {
        for (int i = 0; i < threads; i++) {
            try {
                hlrSockets.add(i, new Worker(ip, port));
            } catch (Exception e) {
            }
        }
    }

    void defineDBPool(int threads) {
        for (int i = 0; i < threads; i++) {

            String user = "contour";
            String password = "contour7w";
            String database_url = "jdbc:oracle:thin:@10.254.5.10:1521:BER1";

            dbSockets.add(i, new DButilities(user, password, database_url));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaNumbersList = new javax.swing.JTextArea();
        jButtonClearNumbersListWindow = new javax.swing.JButton();
        jButtonShowExampleNumbersList = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonListNumbersCollation = new javax.swing.JRadioButton();
        jRadioButtonAllBaseCollation = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonStartCollation = new javax.swing.JButton();
        jButtonGetNumberInfo = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButtonExitApp = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelSubsToProcess = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelSubsProcessed = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jButtonClearResultWindow = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaCommandResult = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButtonClearResultWindow1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1Log = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Online сверка с HLR version 1.0.0 (Vazhenin A)");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Список номеров", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jTextAreaNumbersList.setColumns(20);
        jTextAreaNumbersList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAreaNumbersList.setRows(5);
        jTextAreaNumbersList.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaNumbersList);

        jButtonClearNumbersListWindow.setText("Очистить окно");
        jButtonClearNumbersListWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearNumbersListWindowActionPerformed(evt);
            }
        });

        jButtonShowExampleNumbersList.setText("Показать пример");
        jButtonShowExampleNumbersList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowExampleNumbersListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonClearNumbersListWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonShowExampleNumbersList, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClearNumbersListWindow)
                    .addComponent(jButtonShowExampleNumbersList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Выбор типа сверки", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel1.setToolTipText("");

        buttonGroup1.add(jRadioButtonListNumbersCollation);
        jRadioButtonListNumbersCollation.setText("Сверка по списку номеров");
        jRadioButtonListNumbersCollation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonListNumbersCollationActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonAllBaseCollation);
        jRadioButtonAllBaseCollation.setSelected(true);
        jRadioButtonAllBaseCollation.setText("Сверка по всей базе");
        jRadioButtonAllBaseCollation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAllBaseCollationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonAllBaseCollation)
                    .addComponent(jRadioButtonListNumbersCollation)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jRadioButtonAllBaseCollation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonListNumbersCollation)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Действия", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jButtonStartCollation.setText("Начать сверку");
        jButtonStartCollation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartCollationActionPerformed(evt);
            }
        });

        jButtonGetNumberInfo.setText("Получить инфо по номеру");
        jButtonGetNumberInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetNumberInfoActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "4", "8" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Кол-во параллелей");

        jButtonExitApp.setText("Выход");
        jButtonExitApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitAppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonGetNumberInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jButtonStartCollation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonExitApp, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButtonGetNumberInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonStartCollation)
                .addGap(16, 16, 16))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButtonExitApp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Статус обработки"));

        jLabel1.setText("Кол-во абонентов для обработки");

        jLabelSubsToProcess.setText("0");

        jLabel2.setText("Кол-во обработанных абонентов");

        jLabelSubsProcessed.setText("0");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSubsProcessed, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelSubsToProcess, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSubsToProcess)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelSubsProcessed))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Результат выполения комманд", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jButtonClearResultWindow.setText("Очистить окно");
        jButtonClearResultWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearResultWindowActionPerformed(evt);
            }
        });

        jTextAreaCommandResult.setEditable(false);
        jTextAreaCommandResult.setColumns(20);
        jTextAreaCommandResult.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAreaCommandResult.setLineWrap(true);
        jTextAreaCommandResult.setRows(5);
        jScrollPane2.setViewportView(jTextAreaCommandResult);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButtonClearResultWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jButtonClearResultWindow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Инфо по номеру", jPanel6);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "msisdn", "Комментарий"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jButton1.setText("Очистить таблицу");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Экспорт данных в Excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Результат сверки", jPanel9);

        jButtonClearResultWindow1.setText("Очистить окно");
        jButtonClearResultWindow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearResultWindow1ActionPerformed(evt);
            }
        });

        jTextArea1Log.setEditable(false);
        jTextArea1Log.setColumns(20);
        jTextArea1Log.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1Log.setRows(5);
        jScrollPane3.setViewportView(jTextArea1Log);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(jButtonClearResultWindow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButtonClearResultWindow1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Лог", jPanel8);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void setStateConnected() {
        jButtonStartCollation.setEnabled(true);
        isConnected = true;
    }

    static void setStateDisconnected() {
        jButtonStartCollation.setEnabled(false);
        isConnected = false;
    }

    private void jButtonClearNumbersListWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearNumbersListWindowActionPerformed
        jTextAreaNumbersList.setText("");
    }//GEN-LAST:event_jButtonClearNumbersListWindowActionPerformed

    private void jButtonShowExampleNumbersListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowExampleNumbersListActionPerformed
        String numbersListExample = "7000000000\n7000000001\n7000000002";
        jTextAreaNumbersList.setText(numbersListExample);
    }//GEN-LAST:event_jButtonShowExampleNumbersListActionPerformed

    void getSubsToProcessCount(String subs) {

        addLog("Получение кол-ва абонентов для сверки");
        String sql = "select count(*)\n"
                + "  from subs_history sh\n"
                + "  join phone p\n"
                + "    on sh.phone_id = p.phone_id\n"
                + "   and sysdate between sh.stime and sh.etime - 1 / 86400\n"
                + "   and sh.stat_id in (1, 2, 4)\n"
                + "  join subs_usi_history suh\n"
                + "    on sh.subs_id = suh.subs_id\n"
                + "   and sysdate between suh.stime and suh.etime - 1 / 86400\n"
                + "  join client_history ch on sh.clnt_id=ch.clnt_id and %sysdateTime% between ch.stime and ch.etime - 1 / 86400 \n"
                + "  join usi u\n"
                + "    on suh.usi_id = u.usi_id\n"
                + "   and u.switch_id >= 132 %subscribers%";

        /* set date time history */
        sql = sql.replace("%sysdateTime%", "to_date('" + v_startTime + "','dd.mm.yyyy hh24:mi:ss')");

        if (subs == null) {
            sql = sql.replace("%subscribers%", "");
        } else {
            sql = sql.replace("%subscribers%", "and p.msisdn in (" + subs + ")");
        }

        Logging.put_log(sql);

        try {
            db.executeQuery(sql);
            ResultSet rs = db.getRs();
            while (rs.next()) {
                jLabelSubsToProcess.setText(rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void prepareSubsData(String subs) {
        /* получаем кол-во циклов */
        int loops = Integer.valueOf(jComboBox1.getSelectedItem().toString());
        defineHLRConnForPool(loops);
        defineDBPool(loops);

        int subsBase = Integer.valueOf(jLabelSubsToProcess.getText());
        int stepNum = (int) Math.round(subsBase / loops) + 1;

        ResultSet rs1 = null;
        addLog("Получение списка абонентов и их услуг для сверки");
        String sql1 = "select sh.st_id, p.msisdn, u.usi, sh.subs_id\n"
                + "  from subs_history sh\n"
                + "  join phone p\n"
                + "    on sh.phone_id = p.phone_id\n"
                + "   and sysdate between sh.stime and sh.etime - 1 / 86400\n"
                + "   and sh.stat_id in (1, 2, 4)\n"
                + "  join subs_usi_history suh\n"
                + "    on sh.subs_id = suh.subs_id\n"
                + "   and sysdate between suh.stime and suh.etime - 1 / 86400\n"
                + "  join client_history ch on sh.clnt_id=ch.clnt_id and %sysdateTime% between ch.stime and ch.etime - 1 / 86400\n"
                + "  join usi u\n"
                + "    on suh.usi_id = u.usi_id\n"
                + "   and u.switch_id >= 132 %subscribers%";

        /* set date time history */
        sql1 = sql1.replace("%sysdateTime%", "to_date('" + v_startTime + "','dd.mm.yyyy hh24:mi:ss')");

        if (subs == null) {
            sql1 = sql1.replace("%subscribers%", "");
        } else {
            sql1 = sql1.replace("%subscribers%", "and p.msisdn in (" + subs + ")");
        }

        try {
            db.executeQuery(sql1);
            rs1 = db.getRs();

            int i = 0;
            int tempValues = 1;
            ArrayList<SubsData> subsThreadData = new ArrayList<>();
            while (rs1.next()) {
                String phone = rs1.getString(2), st_id = rs1.getString(1), imsi = rs1.getString(3), subs_id = rs1.getString(4);

                // add data to certain thread
                subsThreadData.add(new SubsData(st_id, phone, imsi, subs_id));
                // if we reached one thread values limit, then we proceed to another thread
                if (i < loops - 1) { // we don't create more than specified amount of threads
                    if (tempValues == stepNum) {
                        threads.add(i, subsThreadData);
                        subsThreadData.clear();
                        tempValues = 0;// don't forget to reset counter
                        addLog("Подготовка данных для потока № " + (i) + " завершена");
                        i++; // increment thread number                                    
                    }
                }
                tempValues++;
            }
            if (subsThreadData.size() != 0) {
                threads.add(i, subsThreadData);
                addLog("Подготовка данных для потока № " + (i) + " завершена");
            }            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        } finally {
            db.close_statement();
            db.close_rs();
        }

    }

    boolean ifThreadAlive(String threadName) {
        boolean isAlive = false;
        for (Thread t : Thread.getAllStackTraces().keySet()) {
            if (t.getName().contains(threadName) && t.isAlive()) {
                isAlive = true;
                break;
            }
        }
        return isAlive;
    }

    public synchronized static void showSubsProcessedResult() {
        processedSubs++;
        jLabelSubsProcessed.setText(String.valueOf(processedSubs));
    }

    private void jButtonClearResultWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearResultWindowActionPerformed
        jTextAreaCommandResult.setText("");
    }//GEN-LAST:event_jButtonClearResultWindowActionPerformed

    private void jButtonClearResultWindow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearResultWindow1ActionPerformed
        jTextArea1Log.setText("");
    }//GEN-LAST:event_jButtonClearResultWindow1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "msisdn", "Комментарий"
                }));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        final int maxRows = 65535;
        int currentRowNum = 0;
        int sheetNum = 0;
        try {
            /* creating book and sheet for exporting */
            WritableWorkbook workbook = Workbook.createWorkbook(new File("output_" + System.currentTimeMillis() + ".xls"));
            WritableSheet sheet = workbook.createSheet("Sheet # " + sheetNum, sheetNum);

            /* prepare cell format for header */
            WritableFont arial10font = new WritableFont(WritableFont.ARIAL, 10, WritableFont.BOLD);
            WritableCellFormat arial10format = new WritableCellFormat(arial10font);

            /* write header */
            sheet.addCell(new Label(0, currentRowNum, "Msisdn абонента", arial10format));
            sheet.addCell(new Label(1, currentRowNum, "Комментарий", arial10format));
            currentRowNum++;

            /* loop through table contents */
            for (int i = 0; i < jTable1.getModel().getRowCount(); i++) {
                String msisdn = jTable1.getModel().getValueAt(i, 0).toString();
                String comment = jTable1.getModel().getValueAt(i, 1).toString();
                sheet.addCell(new Label(0, currentRowNum, msisdn));
                sheet.addCell(new Label(1, currentRowNum, comment));
                currentRowNum++;
                if ((currentRowNum - 1) == maxRows) {
                    currentRowNum = 0; // reset rows count

                    /* write header */
                    sheet.addCell(new Label(0, currentRowNum, "Msisdn абонента", arial10format));
                    sheet.addCell(new Label(1, currentRowNum, "Комментарий", arial10format));

                    currentRowNum++;
                    sheetNum++; // increment sheet number
                    sheet = workbook.createSheet("Sheet # " + sheetNum, sheetNum); // create new sheet
                }
            }
            /* done with exporting, close book and sheets */
            workbook.write();
            workbook.close();
        } catch (Exception e) {
            e.printStackTrace();
            addLog(e.getMessage());
        }

        JOptionPane.showMessageDialog(this, "Экспортирование данных завершено", "Внимание", 2);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonExitAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitAppActionPerformed
        db.close_conn();
        System.exit(0);
    }//GEN-LAST:event_jButtonExitAppActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonGetNumberInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetNumberInfoActionPerformed
        if (jRadioButtonListNumbersCollation.isSelected()) {

            String temp = jTextAreaNumbersList.getText();
            ArrayList<String> numbers = new ArrayList<String>();

            if (temp.trim().length() > 0) {
                if (temp.indexOf("\n") != -1) {
                    while (temp.indexOf("\n") != -1) {
                        numbers.add(temp.substring(1, temp.indexOf("\n")));
                        temp = temp.substring(temp.indexOf("\n") + 1, temp.length());
                        if (temp.indexOf("\n") != -1) {
                            numbers.add(temp);
                        }
                    }
                } else {
                    numbers.add(temp);
                }

                if (numbers.size() == 1) {
                    /* create inner hlr worker instance */
                    Worker hlrGetInfo = new Worker();
                    hlrGetInfo.establishConnection();
                    hlrGetInfo.loginToHLR();

                    String requestedData = numbers.get(numbers.size() - 1), subsData = new String();
                    if (requestedData.length() > 11) {
                        /* IMSI */
                        subsData = hlrGetInfo.getSubsDataByIMSI(numbers.get(numbers.size() - 1));
                    } else {
                        /* MSISDN */
                        subsData = hlrGetInfo.getSubsDataByMSISDN(numbers.get(numbers.size() - 1));
                    }
                    if (subsData != null) {
                        addResult(subsData);
                    } else {
                        addResult(hlrGetInfo.lastCommandErrorMsg);
                    }
                } else {
                    addResult("Для получения информации по номеру, нужно указать только один номер");
                }
            } else {
                addResult("Для получения информации по номеру, окно список номеров не должно быть пустым");
            }

        }
    }//GEN-LAST:event_jButtonGetNumberInfoActionPerformed

    private void jButtonStartCollationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartCollationActionPerformed

        v_startTime = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss").format(new Date(System.currentTimeMillis()));
        jLabelSubsProcessed.setText("0");
        jLabelSubsToProcess.setText("0");
        processedSubs = 0;
        threads = new ArrayList<>();
        hlrSockets = new ArrayList<>();
        dbSockets = new ArrayList<>();
        numbersList = null;

        try {
            if (jRadioButtonListNumbersCollation.isSelected()) {
                numbersList = getListOfNumbers(jTextAreaNumbersList.getText().trim());
                if (numbersList.length() == 0) {
                    addLog("Чтобы сделать сверку по конкретным номерам, окно \"Список номеров\" не должно быть пустым");
                    return;
                }
            }

            /* set database parameters */
            db.setUser("contour");
            db.setPassword("contour7w");
            db.setDatabase_url("jdbc:oracle:thin:@10.254.5.10:1521:BER1");
            db.open_conn();

            //if (jRadioButtonAllBaseCollation.isSelected()) {
                /* get numbers of subscribers to proccess */
                Thread getSubsCount = new Thread(new Runnable() {

                    @Override
                    public void run() {
                        getSubsToProcessCount(numbersList);
                    }
                });

                /* Loading subscriber database into arrays for certain threads */
                Thread prepareThreadsData = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        prepareSubsData(numbersList);
                    }
                });

                /* run all threads in parallel */
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            getSubsCount.start();
                            getSubsCount.join();
                            prepareThreadsData.start();
                            prepareThreadsData.join();

                            System.out.println("hlrSockets=" + hlrSockets.size());
                            System.out.println("threads=" + threads.size());

                            for (int i = 0; i < threads.size(); i++) {
                                ArrayList<SubsData> thread = threads.get(i);
                                //                          define new class copy for Worker and DBUtilities
                                Worker w = hlrSockets.get(i);
                                DButilities db = dbSockets.get(i);

                                new Thread(new Collation(thread, w), "collateThread #" + i).start();
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                }).start();
            } catch (Exception e) {
                e.printStackTrace();
            }

            //}
    }//GEN-LAST:event_jButtonStartCollationActionPerformed

    private void jRadioButtonAllBaseCollationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAllBaseCollationActionPerformed
        jTextAreaNumbersList.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonAllBaseCollationActionPerformed

    private void jRadioButtonListNumbersCollationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonListNumbersCollationActionPerformed
        jTextAreaNumbersList.setEnabled(true);
        if (isConnected) {
            jButtonGetNumberInfo.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButtonListNumbersCollationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonClearNumbersListWindow;
    private javax.swing.JButton jButtonClearResultWindow;
    private javax.swing.JButton jButtonClearResultWindow1;
    private javax.swing.JButton jButtonExitApp;
    private javax.swing.JButton jButtonGetNumberInfo;
    private javax.swing.JButton jButtonShowExampleNumbersList;
    private static javax.swing.JButton jButtonStartCollation;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private static javax.swing.JLabel jLabelSubsProcessed;
    private javax.swing.JLabel jLabelSubsToProcess;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButtonAllBaseCollation;
    private javax.swing.JRadioButton jRadioButtonListNumbersCollation;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private static javax.swing.JTable jTable1;
    private static javax.swing.JTextArea jTextArea1Log;
    private static javax.swing.JTextArea jTextAreaCommandResult;
    private javax.swing.JTextArea jTextAreaNumbersList;
    // End of variables declaration//GEN-END:variables

    public static void addResult(String test) {
        jTextAreaCommandResult.append(test + "\n");
    }

    public static void addLog(String test) {
        jTextArea1Log.append(test + "\n");
    }

    /**
     * Returns list of numbers entered into jTextAreaNumbersList
     */
    String getListOfNumbers(String list) {
        String newList = new String();
        if (list.trim().length() > 0) {
            if (list.indexOf("\n") != -1) {
                while (list.indexOf("\n") != -1) {
                    newList += "'" + list.substring(0, list.indexOf("\n")) + "',";
                    list = list.substring(list.indexOf("\n") + 1, list.length());
                    if (list.indexOf("\n") == -1) {
                        newList += "'" + list.substring(0, list.length()) + "'";
                    }
                }
            } else {
                newList += "'" + list.substring(0, list.length()) + "'";
            }
        }
        return newList;
    }

    public int connectToInvoice(JTextArea textResult) {
        int result = -1;
        db.setUser("contour");
        db.setPassword("contour7w");
        db.setDatabase_url("jdbc:oracle:thin:@10.254.5.10:1521:BER1");

        Connection con = null;
        db.setConn(con);
        db.open_conn();
        db.executeQuery("select sysdate from dual");
        ResultSet rs = db.getRs();
        try {
            while (rs.next()) {
            }
            result = 0;
        } catch (Exception e) {
            textResult.append(e.getMessage() + "\n");
            e.printStackTrace();
        }
        return result;

    }

    class SubsData {

        String st_id;
        String msisdn;
        String usi;
        String subs_id;

        public SubsData(String st_id, String msisdn, String usi, String subs_id) {
            this.st_id = st_id;
            this.msisdn = msisdn;
            this.usi = usi;
            this.subs_id = subs_id;
        }

    }

    public static void insertRow(String msisdn, String comment) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{msisdn, comment});
    }

}
